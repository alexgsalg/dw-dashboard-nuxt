//RADIO
.radio {
  display: block;
  position: relative;
  padding-left: 26px;
  margin-bottom: 12px;
  cursor: pointer;
  @include fontStyle(1.6rem, 2rem, $text_dark, 300);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.radio input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkround {
  position: absolute;
  top: 1px;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: $white;
  border-color: $element_gray;
  border-style: solid;
  border-width: 2px;
  border-radius: 50%;
}

/* When the radio button is checked, add a blue background */
.radio input:checked ~ .checkround {
  background-color: $primary;
  border-color: $primary;
}

//CHECKBOX

/* The check */
.check {
  @include dflex(space-between, flex-start);
  position: relative;
  padding-left: 25px;
  margin-bottom: 12px;
  cursor: pointer;
  @include fontStyle(1.6rem, 2rem, $text_dark, 300);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.check input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 1px;
  left: 0;
  height: 17px;
  width: 17px;
  background-color: #fff;
  border-color: $element_gray;
  border-style: solid;
  border-width: 2px;
  border-radius: 3px;
}

/* When the checkbox is checked, add a blue background */
.check input:checked ~ .checkmark {
  background-color: #fff;
  border-color: $primary;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.check input:checked ~ .checkmark:after {
  display: block;
  border-color: $primary;
}

/* Style the checkmark/indicator */
.check .checkmark:after {
  left: 3px;
  top: 0px;
  width: 5px;
  height: 7px;
  border: solid;
  border-color: $element_gray;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.cust-btn {
  margin-bottom: 10px;
  background-color: $element_gray;
  border-width: 2px;
  border-color: $element_gray;
  color: #fff;
}
.cust-btn:hover {
  border-color: $element_gray;
  background-color: #fff;
  color: $element_gray;
  border-radius: 20px;
  transform-style: 2s;
}

//RATING
.rating input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.rating {
  position: relative;
  @include dflex(space-between, center);
  @include fontStyle(1.6rem, 2rem, $text_dark, 300);
  padding: 0.25rem 0;
  margin-bottom: 1.2rem;

  svg {
    cursor: pointer;
    path {
      transition: all ease-in-out 250ms;
      stroke: $element_lightGray;
      fill: $element_lightGray;

      &.noFill {
        fill: none !important;
      }
    }

    &:hover path {
      stroke: $primary;
      fill: $primary;
    }
  }
}
.rating input:checked ~ svg.rating_star path {
  stroke: $primary;
  fill: $primary;
}
.rating .checkmark:after {
  left: 3px;
  top: 0px;
  width: 5px;
  height: 7px;
  border: solid;
  border-color: $element_gray;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

//COUNTER
.counter {
  @include fontStyle(1.4rem, 2rem, $text_dark, 300);
}
